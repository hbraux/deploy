---

- name: get fqdn
  shell: uname -n
  register: hostname_cmd
  changed_when: false

- set_fact:
    fqdn: "{{  hostname_cmd.stdout }}"

- name: create directory structure
  file:
    path: "{{ ansible_env.HOME }}/{{ item }}"
    state: directory
  with_items:
    - work
    - tmp
    - lib
    - git
    - bin
    - security
    - env.d
    - site.d
    - logs

- name: create site-LOCAL.sh
  copy:
    src: site-LOCAL.sh
    dest: "{{ ansible_env.HOME }}/site.d/site-LOCAL.sh"

- name: lookup for env files
  find:
    path: "{{ playbook_dir }}/env"
    patterns: "*.sh"
  register: env_files
  
- name: create links to env files
  file:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}/env.d/{{ item|basename }}"
    state: link
  with_items: "{{ env_files.files|map(attribute='path')|list }}"

- name: lookup for bin files
  find:
    path: "{{ playbook_dir }}/bin"
    patterns: "*.sh"
  register: bin_files
  
- name: create links to bin files
  file:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}/bin/{{ item|basename }}"
    state: link
  with_items: "{{ bin_files.files|map(attribute='path')|list }}"

- name: update PATH in .bash_profile
  lineinfile:
    path:  "{{ ansible_env.HOME }}/.bash_profile"
    regexp: '^PATH=.*'
    line: 'PATH=$HOME/bin:$PATH:.'

- name: source env files .bash_profile
  lineinfile:
    path:  "{{ ansible_env.HOME }}/.bash_profile"
    regexp: '^\[\[ -d env.d \]\].*'
    line: '[[ -d env.d ]] && for f in env.d/env-*.sh; do . $f ;done && site'


- name: Generate RSA host key
  shell: ssh-keygen -q -t rsa -b 4048  -C "$USER@$HOSTNAME" -N "" -f $HOME/.ssh/id_rsa
  args:
    creates: "{{ ansible_env.HOME }}/.ssh/id_rsa"

- name: create .ansible.cfg
  copy:
    src: ansible.cfg
    dest: "{{ ansible_env.HOME }}/.ansible.cfg"

- name: create .emacs
  copy:
    src: emacs
    dest: "{{ ansible_env.HOME }}/.emacs"

