- name: fix Kernel settings for docker
  copy:
    src: 01-docker.conf
    dest: /etc/sysctl.d/01-docker.conf

- name: add Docker CE repository (CentOS)
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo
  when: ansible_distribution == 'CentOS'

- name: install key (Ubuntu)
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  when: false and ansible_distribution == 'Ubuntu'

- name: add Docker CE repository (Ubuntu)
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
    state: present
  when: ansible_distribution == 'Ubuntu'
    
- name : install docker
  package:
    name: docker-ce

- name: create directory /etc/systemd/system/docker.service.d
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: configure proxy for docker
  template:
    src: http-proxy.conf.j2
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf
  when: ansible_env.http_proxy is defined
  
- name: creates /etc/docker
  file:
    path: /etc/docker
    state: directory
    mode: a+rx

- name: get hostname
  shell: uname -n
  register: hostname_cmd
  changed_when: false

- set_fact:
    fqdn: "{{ hostname_cmd.stdout }}"

- name: start docker services
  service:
    name: docker
    state: started
    enabled: yes

- name: install docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/1.19.0/docker-compose-Linux-x86_64
    dest: /usr/bin/docker-compose
    mode: 0755
  when: docker_compose

- name: get the username running the deploy
  become: false
  local_action: command whoami
  register: whoami_cmd
  changed_when: false

- set_fact:
    runuser: "{{ whoami_cmd.stdout }}"

- name: add {{ runuser }} to group docker
  user:
    name: "{{ runuser }}"
    groups: docker
    append: yes

- name: check if /etc/motd exists
  stat:
    path: /etc/motd
  register: motd_stat
  
- name: add message to motd
  lineinfile:
    path: /etc/motd
    regexp: "^docker .*"
    line: "docker is running on this server"
  when: motd_stat.stat.exists
